# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
POST    /                           controllers.Application.authenticate()
GET     /home                       controllers.Application.home()
GET     /about                      controllers.Application.about()
GET		/logout						controllers.Application.logout()
GET     /PSD                        controllers.Application.perceptionSignalDetection()
GET     /PCB                        controllers.Application.perceptionChangeBlindness()
GET     /PCBIframe                  controllers.Application.perceptionChangeBlindnessIframe()
GET     /PCBProc                    controllers.Application.perceptionChangeBlindnessProc()
GET     /PCBProcIframe              controllers.Application.perceptionChangeBlindnessProcIframe()
GET     /STMBtProc                  controllers.BrownPeterson.renderShortTermMemoryBrownPetersonTaskProc()
GET     /STMBtProcIframe            controllers.BrownPeterson.renderShortTermMemoryBrownPetersonTaskProcIframe()
GET     /STMBt                      controllers.BrownPeterson.task()
GET     /STMBtIframe                controllers.BrownPeterson.renderShortTermMemoryBrownPetersonTaskIframe()
GET     /STMBtExp                   controllers.BrownPeterson.taskExperiment(trialId : Long ?= 1)
POST    /STMBtExp/update/        controllers.BrownPeterson.taskExperiment(id : Long ?= 1)
GET     /report                     controllers.BrownPeterson.report(username:String ?= "", trial_id:Long ?= 0)
GET     /admin                      controllers.Admin.index()
GET     /admin/experiment           controllers.Admin.experiment()
GET     /admin/experiment/add       controllers.Admin.addExperiment()
POST    /admin/experiment           controllers.Admin.saveExperiment()
GET     /admin/experiment/parameter/:id controllers.Admin.parameter(id:Long)
POST    /admin/experiment/update/:id                     controllers.Admin.updateExperiment(id:Long)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
